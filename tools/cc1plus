#!/bin/sh
#
# Custom C preprocessor wrapper, which expands "@" to "this->"
#
# Copyright (c) 2007 by Michael Neumann (mneumann@ntecs.de)
#

parameters=""
outfile=""
file=""
skip_next="false"
want_outfile="false"

for i in $*; do
  if [ $skip_next = "true" ]; then
    skip_next="false"
    parameters="$parameters $i"
  elif [ $want_outfile = "true" ]; then
    want_outfile="false"
    if [ "$outfile" != "" ]; then 
      exit 1
    fi
    outfile=$i
  else
    case $i in
      -D|-U|-I|-MF|-MT|-MQ|-x|-include|-imacros|-idirafter|-iprefix|-iwithprefix|-iwithprefixbefore|-isystem|-A|-dumpbase|-auxbase)
	skip_next="true"
	parameters="$parameters $i"
	;;
      -o)
        want_outfile="true"
        ;;
      *)
        if [ "${i#-}" != "$i" ]; then
	  parameters="$parameters $i"
	else
	  if [ "$file" != "" ]; then 
	    exit 1
	  fi
	  file=$i
	fi
	;;
    esac
  fi
done

# find cc1plus
cpp=`whereis -q cc1plus 2>/dev/null`
if [ "$?" != "0" ]; then
  cpp=`locate cc1plus`
fi

if [ -x "$CPP" ]; then
  echo "good"
elif [ -x "$cpp" ]; then
  CPP="$cpp"
elif [ -x "/usr/libexec/cc1plus" ]; then
  CPP=/usr/libexec/cc1plus
else
  exit 1
fi

${CPP} $*

# test whether GNU sed or BSD sed is used 
# (we need extender regexps via -E or -r)
SED="sed -r"

echo t | $SED t >/dev/null 2>/dev/null
if [ "$?" != "0" ]; then
  SED="sed -E"
fi

echo t | $SED t >/dev/null 2>/dev/null
if [ "$?" != "0" ]; then
  exit 1
fi

if [ "${outfile%.ii}" != "$outfile" ]; then
  $SED '/([^@]|^)@([^@])/s//\1this->\2/g' < $outfile > $outfile.tmp
  mv $outfile.tmp $outfile 
fi
